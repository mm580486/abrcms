version: '3'
networks:
  abrcms-network:
    driver: bridge
services:
  postgres:
    image: 'postgres:10.3-alpine'
    restart: always
    container_name: abrcms-postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: Microlab125462168408577
      POSTGRES_USER: postgres
      POSTGRES_DB: abrcms_production
      PGHOST: /var/run/postgresql
      MAX_CONNECTIONS: 10
      MAX_WAL_SENDERS: 5
      PG_MODE: primary
    volumes:
      - /passion/database/postgres:/var/lib/postgresql/data
    env_file:
      - '.env'
    networks: 
      - abrcms-network
  redis:
    image: bitnami/redis
    restart: always
    env_file:
      - '.env'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks: 
      abrcms-network:
  redis-cache:
    image: bitnami/redis
    restart: always
    env_file:
      - '.env'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks: 
      abrcms-network:
  backend1:
    build:
      context: ../
      dockerfile: ./dockerize/Dockerfile
      args:
        RAILS_ENV: production
    container_name: abrcms_backend_n_1
    command: bundle exec rails s -p 8586
    environment:
      RAILS_MASTER_KEY: 'd3f2e34c330383a8'
      SECRET_KEY_BASE: 'd3f2e34c330383a8'
    networks: 
      abrcms-network:
    ports:
      - 8586:8586
    volumes:
      - ./log:/app/back/abrcms/BE/log
      - ./public:/app/back/abrcms/BE/public
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    links: 
      - postgres
      - redis
    env_file:
      - '.env'
  cron_job:
    build: 
      context: ../
      dockerfile: ./dockerize/Dockerfile
    command: cron -f
    depends_on:
      - postgres
    restart: always
  apache_manager:
    build:
      context: ../apache-config
      dockerfile: ./Dockerfile
    ports:
      - 80:80
      - 443:443
    container_name: apache_manager 
    restart: always
    depends_on:
      - backend1
    links:
      - backend1  
    networks: 
      abrcms-network:
  sidekiq:
        build:
          context: ../
          dockerfile: ./dockerize/Dockerfile
          args:
            RAILS_ENV: production
            JOB_WORKER_URL: redis://redis:6379/0
        env_file:
          - '.env'
        environment:
          RAILS_MASTER_KEY: 'd3f2e34c330383a8'
          SECRET_KEY_BASE: 'd3f2e34c330383a8'
        links:
          - backend1
          - redis
        depends_on:
          - backend1
          - redis
        command: bundle exec sidekiq -e production -L log/sidekiq.log
        restart: always
        networks: 
          abrcms-network:
